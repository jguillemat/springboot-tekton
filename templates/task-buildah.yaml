apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  labels:
{{ include "springboot-tekton.labels" . | nindent 4 }}
  name: buildah
spec:
  workspaces:
  - name: maven-repo
  inputs:
    params:
    - name: BUILDER_IMAGE
      description: The location of the buildah builder image.
      default: quay.io/buildah/stable:v1.14.3
    - name: DOCKERFILE
      description: Path to the Dockerfile to build.
      default: ./Dockerfile
    - name: CONTEXT
      description: Path to the directory to use as context.
      default: .
    - name: TLSVERIFY
      description: Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)
      default: "true"
    - name: FORMAT
      description: The format of the built container, oci or docker
      default: "oci"
    resources:
    - name: source
      type: git
  outputs:
    resources:
    - name: image
      type: image
  steps:   

  - name: package
    image: maven:3.6.0-jdk-8-slim
    workingDir: /workspace/source
    command:
    - /usr/bin/mvn
    args:
    - -Dmaven.repo.local=$(workspaces.maven-repo.path)
    - -DskipTests
    - package

  - name: make-upload-dir
    image: quay.io/openshift-pipeline/openshift-cli:latest
    command: ["mkdir"]
    args:
      - -p
      - /workspace/source/upload

  - name: copy-assets
    image: quay.io/openshift-pipeline/openshift-cli:latest
    command: ["cp"]
    args:
      - /workspace/source/target/shift-rest-1.0.0-SNAPSHOT.jar
      - /workspace/source/Dockerfile
      - /workspace/source/upload

  - name: build-image
    image: $(inputs.params.BUILDER_IMAGE)
    workingDir: /workspace/source/upload
    command: ['buildah']
    args:
      - bud
      - --format=$(inputs.params.FORMAT)
      - --tls-verify=$(inputs.params.TLSVERIFY)
      - --cert-dir=/run/secrets/kubernetes.io/serviceaccount/
      - --layers
      - -f
      - "$(inputs.params.DOCKERFILE)"
      - -t
      - "$(outputs.resources.image.url)"
      - "$(inputs.params.CONTEXT)"
    volumeMounts:
    - name: varlibcontainers
      mountPath: /var/lib/containers
    securityContext:
      privileged: true

  - name: push-image
    image: $(inputs.params.BUILDER_IMAGE)
    workingDir: /workspace/source
    command: ['buildah']
    args:
      - push
      - "--tls-verify=$(inputs.params.TLSVERIFY)"
      - "--cert-dir=/run/secrets/kubernetes.io/serviceaccount/"
      - "$(outputs.resources.image.url)"
      - "docker://$(outputs.resources.image.url)"
    volumeMounts:
    - name: varlibcontainers
      mountPath: /var/lib/containers
    securityContext:
      privileged: true
      
  volumes:
  - name: varlibcontainers
    persistentVolumeClaim:
      claimName: container-layers